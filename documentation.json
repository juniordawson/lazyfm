{
    "pipes": [
        {
            "name": "MixFilterClass",
            "id": "pipe-MixFilterClass-ca6ef42b41edf510359396f880b9eb60",
            "file": "src/app/pipes/search/search.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [
                {
                    "name": "a",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "mixes",
                            "type": "any"
                        },
                        {
                            "name": "name",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "mixes",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "pure": true,
            "ngname": "mixFilterPipe",
            "sourceCode": "import { PipeTransform, Pipe } from \"@angular/core\";\n@Pipe({\n    name: 'mixFilterPipe',\n    pure: true\n\n})\nexport class MixFilterClass implements PipeTransform {\na;\n    transform(mixes: any, name: string) {\n        if (!mixes || !name) {\n            return mixes;\n        }\n         return mixes.filter(e => e.mixId.toLowerCase().indexOf(name.toLowerCase()) !== -1);\n    }\n}"
        }
    ],
    "interfaces": [],
    "injectables": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-4ee91dad524760153d3c0f6f0014153c",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise<any>;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-b8e8c5ad22823cc5fcaf1f1cc954e123",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'lazyfm'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'lazyfm';\n}\n\n\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<app-header></app-header>\n<div class=\"index\">\n    <div class=\"page\" role=\"main\">\n    <router-outlet></router-outlet>\n</div>\n</div>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-0a59e73a7665c0c0c87483769be7954e-1",
            "file": "src/app/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<header>\n    <img src=\"./assets/img/Lazy_fm.png\" />\n</header>"
        },
        {
            "name": "MixListComponent",
            "id": "component-MixListComponent-ddf31f49b29ef093965952e71aecda3b",
            "file": "src/app/mix-list/mix-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mix-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./mix-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "finalResult",
                    "defaultValue": "[]",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "layout",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "mixes",
                    "defaultValue": "mixes",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "search",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 15,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { mixes } from '../mixes';\n\n@Component({\n  selector: 'app-mix-list',\n  templateUrl: './mix-list.component.html'\n})\n\nexport class MixListComponent {\n  mixes = mixes;\n  layout;\n  search;\n  finalResult: any = [];\n\n  transform(event){\n    if(event != '' ) {\n      this.finalResult = [];\n      return this.mixes.filter(e => {\n        e.tracklist.filter(ee => {\n        console.log(ee);\n        if(ee.artist.toLowerCase().startsWith(event) === true) {\n          this.finalResult.push(e);\n        } else if(e.mixId.toLowerCase().startsWith(event) === true) {\n          this.finalResult = [];\n          this.finalResult.push(e);\n        }\n      })\n    })\n  }\n}\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<!-- https://stackoverflow.com/questions/40678206/angular-2-filter-search-list -->\n<section class=\"search-field\">\n    <input (input) = \"transform($event.target.value)\" [(ngModel)]=\"search\" class=\"font-size--lg\">\n</section>\n\n<section>\n    <div class=\"btn__group\">\n        <button (click)=\"layout=!layout\" [ngClass]=\"{'btn--secondary' : layout, 'btn--primary' : !layout}\" class=\"btn\">Grid</button>\n        <button (click)=\"layout=!layout\" [ngClass]=\"{'btn--primary' : layout, 'btn--secondary' : !layout}\" class=\"btn\">Column</button>\n    </div>\n\n\n    <div [ngClass]=\"layout ? 'column' : 'grid'\">\n        <!-- <div *ngFor=\"let mix of mixes | mixFilterPipe : search\" \n        [ngClass]=\"{'card--span': mix.isflipped }\" \n        (click)=\"mix.isflipped = !mix.isflipped;\"\n            class=\"card\">\n            <div class=\"card__inner\">\n                <img src=\"./assets/img/covers/{{mix.img}}\" alt=\"{{mix.title}} cover\" />\n                <div class=\"card__buttons two-col btn__group\">\n                    <a href=\"{{mix.file}}\" download class=\"btn btn--primary two-col__item\">Download file</a>\n                    <a href=\"\" class=\"btn btn--primary two-col__item\">Listen online</a>\n                </div>\n            </div>\n            <div class=\"card__inner\">\n                <h2>{{mix.title}}</h2> \n                <dl>\n                    <dt>Dj: </dt>\n                    <dd>{{mix.dj}}</dd>\n                </dl>\n                <dl>\n                    <dt>Sound/s: </dt>\n                    <dd *ngFor=\"let genre of mix.genres\">{{genre.sound}}</dd>\n                </dl>\n                <dl>\n                    <dt>Collection: </dt>\n                    <dd>{{mix.collection}}</dd>\n                </dl>\n                <dl>\n                    <dt>Date:</dt>\n                    <dd>{{mix.date}}</dd>\n                </dl>\n\n                <h3>Tracklist:</h3>\n                <ul>\n                    <li *ngFor='let tracklist of mix.tracklist'>{{ tracklist.artist }} &mdash; '{{ tracklist.track }}'</li>\n                </ul>\n            </div>\n        </div> -->\n\n        <div *ngFor=\"let mix of finalResult;\" \n            [ngClass]=\"{'card--span': mix.isflipped }\" \n            (click)=\"mix.isflipped = !mix.isflipped;\"\n            class=\"card\">\n            <div class=\"card__inner\">\n                <img src=\"./assets/img/covers/{{mix.img}}\" alt=\"{{mix.title}} cover\" />\n                <div class=\"card__buttons two-col btn__group\">\n                    <a href=\"{{mix.file}}\" download class=\"btn btn--primary two-col__item\">Download file</a>\n                    <a href=\"\" class=\"btn btn--primary two-col__item\">Listen online</a>\n                </div>\n            </div>\n            <div class=\"card__inner\">\n                <h2>{{mix.title}}</h2> \n                <dl>\n                    <dt>Dj: </dt>\n                    <dd>{{mix.dj}}</dd>\n                </dl>\n                <dl>\n                    <dt>Sound/s: </dt>\n                    <dd *ngFor=\"let genre of mix.genres\">{{genre.sound}}</dd>\n                </dl>\n                <dl>\n                    <dt>Collection: </dt>\n                    <dd>{{mix.collection}}</dd>\n                </dl>\n                <dl>\n                    <dt>Date:</dt>\n                    <dd>{{mix.date}}</dd>\n                </dl>\n\n                <h3>Tracklist:</h3>\n                <ul>\n                    <li *ngFor='let tracklist of mix.tracklist'>{{ tracklist.artist }} &mdash; '{{ tracklist.track }}'</li>\n                </ul>\n            </div>\n        </div>\n\n        <!-- <div class=\"card\" \n            *ngFor=\"let mix of mixes | search:'mixId,title,tracklist.artist':query; index as mixId\"\n            [ngClass]=\"{'card--span': mix.isflipped }\" \n            (click)=\"mix.isflipped = !mix.isflipped;\">\n            <div class=\"card__inner\">\n                <img src=\"./assets/img/covers/{{mix.img}}\" alt=\"{{mix.title}} cover\" />\n                <div class=\"card__buttons two-col btn__group\">\n                    <a href=\"{{mix.file}}\" download class=\"btn btn--primary two-col__item\">Download file</a>\n                    <a href=\"\" class=\"btn btn--primary two-col__item\">Listen online</a>\n                </div>\n            </div>\n            <div class=\"card__inner\">\n                <h2>{{mix.title}}</h2> \n                <dl>\n                    <dt>Dj: </dt>\n                    <dd>{{mix.dj}}</dd>\n                </dl>\n                <dl>\n                    <dt>Sound/s: </dt>\n                    <dd *ngFor=\"let genre of mix.genres\">{{genre.sound}}</dd>\n                </dl>\n                <dl>\n                    <dt>Collection: </dt>\n                    <dd>{{mix.collection}}</dd>\n                </dl>\n                <dl>\n                    <dt>Date:</dt>\n                    <dd>{{mix.date}}</dd>\n                </dl>\n\n                <h3>Tracklist:</h3>\n                <ul>\n                    <li *ngFor='let tracklist of mix.tracklist'>{{ tracklist.artist }} &mdash; '{{ tracklist.track }}'</li>\n                </ul>\n            </div>\n        </div> -->\n    </div>\n</section>"
        },
        {
            "name": "MixPageComponent",
            "id": "component-MixPageComponent-27039c00509f322a2f1abe7fe994c8fa",
            "file": "src/app/mix-page/mix-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mix-page",
            "styleUrls": [
                "./mix-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mix-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "mix",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "mixId",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { mixes } from '../mixes';\n\n@Component({\n  selector: 'app-mix-page',\n  templateUrl: './mix-page.component.html',\n  styleUrls: ['./mix-page.component.scss']\n})\nexport class MixPageComponent implements OnInit {\n  mix;\n  mixId;\n\n  constructor(\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.mix = mixes[+params.get('mixId')];\n    });\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./mix-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Mix page</h1>\n\n<div *ngIf=\"mix\">\n    <div class=\"mix\">\n        <div class=\"mix__cover\">\n            <a [routerLink]=\"['/mixes', mixId]\" class=\"mix__image-link\"><img src=\"./assets/img/covers/{{mix.img}}\" alt=\"\" /></a>\n            <div class=\"two-col\">\n            <p><a href=\"{{mix.file}}\" download class=\"btn\">Download file</a></p>\n            <p><a href=\"\" class=\"btn\">Listen online</a></p>\n            </div>\n            \n            <p>{{mix.date}}</p>\n        </div>\n        <div class=\"mix__content\">\n            <h1>{{mix.title}}</h1> \n            <dl>\n            <dt>Dj: </dt>\n            <dd>{{mix.dj}}</dd>\n            </dl>\n            <dl>\n            <dt>Sound/s: </dt>\n            <dd *ngFor=\"let genre of mix.genres\">{{genre.sound}}</dd>\n            </dl>\n            <dl>\n            <dt>Collection: </dt>\n            <dd>{{mix.collection}}</dd>\n            </dl>\n    \n            <h3>Tracklist:</h3>\n            <ul>\n                <li *ngFor='let tracklist of mix.tracklist'>{{ tracklist.artist }} - {{ tracklist.track }}</li>\n            </ul>\n        </div>\n    </div>\n  </div>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-cca1a8911321fa17756ce90c90de65cc",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 66,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "MixFilterClass"
                        },
                        {
                            "name": "MixListComponent"
                        },
                        {
                            "name": "MixPageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "mixes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/mixes.ts",
                "type": "[]",
                "defaultValue": "[\n    {  \n        \"mixId\":\"cook091\",\n        \"file\":\"https://s3-eu-west-1.amazonaws.com/lazy-fm-cooking-beats/Lazy-fm-Cooking-Beats-91.m4a\",\n        \"img\":\"cooking-cover-91.jpg\",\n        \"title\":\"Lazy.fm Cooking Beats 91\",\n        \"subtitle\":\"#Jumpumper\",\n        \"collection\":\"Cooking Beats\",\n        \"dj\":\"Jnr.D\",\n        \"date\":\"17/12/17\",\n        \"tracklist\":[  \n            {  \n            \"artist\":\"Red Rack'em\",\n            \"track\":\"Bonn\"\n            },\n            {  \n            \"artist\":\"REkchampa\",\n            \"track\":\"Fried Chicken Skin\"\n            },\n            {  \n            \"artist\":\"Lerosa\",\n            \"track\":\"Sketch_Sad_Mix\"\n            },\n            {  \n            \"artist\":\"Jay L\",\n            \"track\":\"Me and Her\"\n            },\n            {  \n            \"artist\":\"DJ Nature\",\n            \"track\":\"LF (Mix 1)\"\n            },\n            {  \n            \"artist\":\"Sound Stream\",\n            \"track\":\"Julie's Theme\"\n            },\n            {  \n            \"artist\":\"Idjut Boys\",\n            \"track\":\"Ball Beat\"\n            },\n            {  \n            \"artist\":\"Dj Fett Burger\",\n            \"track\":\"Pub 18\"\n            },\n            {  \n            \"artist\":\"Devin Dare\",\n            \"track\":\"Kly((mxxx)\"\n            },\n            {  \n            \"artist\":\"Marsellus Pittman / Theo Parrish\",\n            \"track\":\"Night Of The Sagitarius\"\n            },\n            {  \n            \"artist\":\"Steven Julien\",\n            \"track\":\"XL\"\n            },\n            {  \n            \"artist\":\"Ben Houghton\",\n            \"track\":\"Market House\"\n            },\n            {  \n            \"artist\":\"Kings of Tomorrow - Finally\",\n            \"track\":\"(Danny Krivit and Steve Travotta re-edit)\"\n            }\n        ]\n    },\n    {  \n        \"mixId\":\"cook090\",\n        \"file\":\"https://s3-eu-west-1.amazonaws.com/lazy-fm-cooking-beats/Lazy-fm-Cooking-Beats-90.m4a\",\n        \"img\":\"cooking-cover-90.jpg\",\n        \"title\":\"Lazy.fm Cooking Beats 90\",\n        \"subtitle\":\"#TimeShift\",\n        \"collection\":\"Cooking Beats\",\n        \"dj\":\"El Pachino\",\n        \"date\":\"29/10/17\",\n        \"tracklist\":[  \n            {  \n            \"artist\":\"Joe\",\n            \"track\":\"MPH\"\n            },\n            {  \n            \"artist\":\"Rekchampa\",\n            \"track\":\"Track 1\"\n            },\n            {  \n            \"artist\":\"SVN\",\n            \"track\":\"Track 2\"\n            },\n            {  \n            \"artist\":\"John Carpenter\",\n            \"track\":\"The Bank Robbery\"\n            },\n            {  \n            \"artist\":\"Daphni\",\n            \"track\":\"Face to face\"\n            },\n            {  \n            \"artist\":\"Hubert Laws\",\n            \"track\":\"Inflation Chaser\"\n            },\n            {  \n            \"artist\":\"Stefan Ringer\",\n            \"track\":\"Can’t stop\"\n            },\n            {  \n            \"artist\":\"Tatham, Mensah, Lord and Ranks\",\n            \"track\":\"Two way here one way go\"\n            },\n            {  \n            \"artist\":\"Domenique Dumont\",\n            \"track\":\"La Basse et les shakers\"\n            },\n            {  \n            \"artist\":\"Kahil El’Zabar and the Kemit Sources\",\n            \"track\":\"Our time is now (IG Culture remix)\"\n            },\n            {  \n            \"artist\":\"Send Wildblood w/James Booth\",\n            \"track\":\"Lifestyle\"\n            },\n            {  \n            \"artist\":\"Moodymann\",\n            \"track\":\"Shattered Dreams\"\n            },\n            {  \n            \"artist\":\"Lalo Schifrin\",\n            \"track\":\"Baia\"\n            },\n            {  \n            \"artist\":\"Rudi Valdersnes\",\n            \"track\":\"Track 2\"\n            }\n        ]\n    }\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "any"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  component: Header,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  component: Page,\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "any"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  component: Header,\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  component: Page,\n  props: args,\n})"
                }
            ],
            "src/app/mixes.ts": [
                {
                    "name": "mixes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/mixes.ts",
                    "type": "[]",
                    "defaultValue": "[\n    {  \n        \"mixId\":\"cook091\",\n        \"file\":\"https://s3-eu-west-1.amazonaws.com/lazy-fm-cooking-beats/Lazy-fm-Cooking-Beats-91.m4a\",\n        \"img\":\"cooking-cover-91.jpg\",\n        \"title\":\"Lazy.fm Cooking Beats 91\",\n        \"subtitle\":\"#Jumpumper\",\n        \"collection\":\"Cooking Beats\",\n        \"dj\":\"Jnr.D\",\n        \"date\":\"17/12/17\",\n        \"tracklist\":[  \n            {  \n            \"artist\":\"Red Rack'em\",\n            \"track\":\"Bonn\"\n            },\n            {  \n            \"artist\":\"REkchampa\",\n            \"track\":\"Fried Chicken Skin\"\n            },\n            {  \n            \"artist\":\"Lerosa\",\n            \"track\":\"Sketch_Sad_Mix\"\n            },\n            {  \n            \"artist\":\"Jay L\",\n            \"track\":\"Me and Her\"\n            },\n            {  \n            \"artist\":\"DJ Nature\",\n            \"track\":\"LF (Mix 1)\"\n            },\n            {  \n            \"artist\":\"Sound Stream\",\n            \"track\":\"Julie's Theme\"\n            },\n            {  \n            \"artist\":\"Idjut Boys\",\n            \"track\":\"Ball Beat\"\n            },\n            {  \n            \"artist\":\"Dj Fett Burger\",\n            \"track\":\"Pub 18\"\n            },\n            {  \n            \"artist\":\"Devin Dare\",\n            \"track\":\"Kly((mxxx)\"\n            },\n            {  \n            \"artist\":\"Marsellus Pittman / Theo Parrish\",\n            \"track\":\"Night Of The Sagitarius\"\n            },\n            {  \n            \"artist\":\"Steven Julien\",\n            \"track\":\"XL\"\n            },\n            {  \n            \"artist\":\"Ben Houghton\",\n            \"track\":\"Market House\"\n            },\n            {  \n            \"artist\":\"Kings of Tomorrow - Finally\",\n            \"track\":\"(Danny Krivit and Steve Travotta re-edit)\"\n            }\n        ]\n    },\n    {  \n        \"mixId\":\"cook090\",\n        \"file\":\"https://s3-eu-west-1.amazonaws.com/lazy-fm-cooking-beats/Lazy-fm-Cooking-Beats-90.m4a\",\n        \"img\":\"cooking-cover-90.jpg\",\n        \"title\":\"Lazy.fm Cooking Beats 90\",\n        \"subtitle\":\"#TimeShift\",\n        \"collection\":\"Cooking Beats\",\n        \"dj\":\"El Pachino\",\n        \"date\":\"29/10/17\",\n        \"tracklist\":[  \n            {  \n            \"artist\":\"Joe\",\n            \"track\":\"MPH\"\n            },\n            {  \n            \"artist\":\"Rekchampa\",\n            \"track\":\"Track 1\"\n            },\n            {  \n            \"artist\":\"SVN\",\n            \"track\":\"Track 2\"\n            },\n            {  \n            \"artist\":\"John Carpenter\",\n            \"track\":\"The Bank Robbery\"\n            },\n            {  \n            \"artist\":\"Daphni\",\n            \"track\":\"Face to face\"\n            },\n            {  \n            \"artist\":\"Hubert Laws\",\n            \"track\":\"Inflation Chaser\"\n            },\n            {  \n            \"artist\":\"Stefan Ringer\",\n            \"track\":\"Can’t stop\"\n            },\n            {  \n            \"artist\":\"Tatham, Mensah, Lord and Ranks\",\n            \"track\":\"Two way here one way go\"\n            },\n            {  \n            \"artist\":\"Domenique Dumont\",\n            \"track\":\"La Basse et les shakers\"\n            },\n            {  \n            \"artist\":\"Kahil El’Zabar and the Kemit Sources\",\n            \"track\":\"Our time is now (IG Culture remix)\"\n            },\n            {  \n            \"artist\":\"Send Wildblood w/James Booth\",\n            \"track\":\"Lifestyle\"\n            },\n            {  \n            \"artist\":\"Moodymann\",\n            \"track\":\"Shattered Dreams\"\n            },\n            {  \n            \"artist\":\"Lalo Schifrin\",\n            \"track\":\"Baia\"\n            },\n            {  \n            \"artist\":\"Rudi Valdersnes\",\n            \"track\":\"Track 2\"\n            }\n        ]\n    }\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 3,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/mix-list/mix-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MixListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/mix-page/mix-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MixPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/mixes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mixes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/search/search.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "MixFilterClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}